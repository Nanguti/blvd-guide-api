{
    "openapi": "3.0.0",
    "info": {
        "title": "Houzez Real Estate API Documentation",
        "description": "API documentation for Houzez Real Estate platform",
        "contact": {
            "name": "Houzez Support",
            "email": "admin@houzez.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/api/agencies": {
            "get": {
                "tags": [
                    "Agencies"
                ],
                "summary": "Get list of agencies",
                "operationId": "1ca97b3c8c3ea6e6162e3f4ec0d699ca",
                "responses": {
                    "200": {
                        "description": "List of agencies with agent count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Agency"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Agencies"
                ],
                "summary": "Create a new agency",
                "operationId": "6098d548b3e417db8ee1eb4d56042744",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "logo": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "url",
                                        "nullable": true
                                    },
                                    "social_media_links": {
                                        "type": "object",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Agency created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agency"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/agencies/{agency}": {
            "get": {
                "tags": [
                    "Agencies"
                ],
                "summary": "Get agency details",
                "operationId": "659ece2320bbd9c3ba9f1ea608841314",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agency details with agents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agency"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agency not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Agencies"
                ],
                "summary": "Update agency details",
                "operationId": "54d17a93f9ac7bde7e8c4fe2d83c16bc",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "logo": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "url",
                                        "nullable": true
                                    },
                                    "social_media_links": {
                                        "type": "object",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Agency updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agency"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Agencies"
                ],
                "summary": "Delete an agency",
                "operationId": "2fa4033f673645ab8d7ef3de6e857307",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Agency deleted successfully"
                    }
                }
            }
        },
        "/api/agencies/{agency}/agents": {
            "get": {
                "tags": [
                    "Agencies"
                ],
                "summary": "Get agency agents",
                "operationId": "2954f766ff0e8df5f7e11247135f78e1",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of agency agents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/amenities": {
            "get": {
                "tags": [
                    "Amenities"
                ],
                "summary": "Get list of amenities",
                "operationId": "b9b13d6a36e5bb1e593a099b15961753",
                "responses": {
                    "200": {
                        "description": "List of amenities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Amenity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Amenities"
                ],
                "summary": "Create a new amenity",
                "operationId": "de05d9ff23ed9673ffa092903b0d6695",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "icon": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Amenity created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Amenity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/amenities/{amenity}": {
            "get": {
                "tags": [
                    "Amenities"
                ],
                "summary": "Get amenity details",
                "operationId": "08ed1b8e47820740c639de4bbaebb535",
                "parameters": [
                    {
                        "name": "amenity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Amenity details with related properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Amenity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Amenity not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Amenities"
                ],
                "summary": "Update amenity details",
                "operationId": "59441e8568733fa69beca8325e9bde8a",
                "parameters": [
                    {
                        "name": "amenity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "icon": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Amenity updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Amenity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Amenities"
                ],
                "summary": "Delete an amenity",
                "operationId": "412a289f623965a0458ba2946859ccb5",
                "parameters": [
                    {
                        "name": "amenity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Amenity deleted successfully"
                    },
                    "422": {
                        "description": "Cannot delete amenity with associated properties"
                    }
                }
            }
        },
        "/api/cities/{city}/areas": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get list of areas in a city",
                "operationId": "8b631b4bedc78a11a597a82eb6d5a978",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of areas with property count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Area"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Areas"
                ],
                "summary": "Create a new area in a city",
                "operationId": "3f176ed2532654e4269ec1743a862987",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Area created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Area"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/cities/{city}/areas/{area}": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get area details",
                "operationId": "ba2c04d21095a7179f0e1f32d140afff",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "area",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Area details with related properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Area"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Area not found in specified city"
                    }
                }
            },
            "put": {
                "tags": [
                    "Areas"
                ],
                "summary": "Update area details",
                "operationId": "cfeb04e1238bfdc69a6995c571eb8617",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "area",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Area updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Area"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Area not found in specified city"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Areas"
                ],
                "summary": "Delete an area",
                "operationId": "ef04a2b9434dad5020585254a75daf28",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "area",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Area deleted successfully"
                    },
                    "404": {
                        "description": "Area not found in specified city"
                    },
                    "422": {
                        "description": "Cannot delete area with associated properties"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "operationId": "ac9c4d978ea4e5b72915ca9728e5b8b1",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "cca49a87d9b0ebb9a98ad7c154b71737",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Category already exists"
                    }
                }
            }
        },
        "/api/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category details",
                "operationId": "ff3ab984d3fe877eb16da6009394d694",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category details",
                "operationId": "3146e96866d62a90bd01a7070fd61470",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Category with this name already exists"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "88c22abd8149aea4b3bdcb280a0fddf7",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    }
                }
            }
        },
        "/api/compare": {
            "get": {
                "tags": [
                    "Compare"
                ],
                "summary": "Get user's property comparison list",
                "operationId": "ef55dd84c160688886bc4685228ce3fb",
                "responses": {
                    "200": {
                        "description": "List of properties being compared",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compare"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Compare"
                ],
                "summary": "Add property to comparison list",
                "operationId": "32d20e821c5d6770c22f4ddbc2c3cd51",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "property_id"
                                ],
                                "properties": {
                                    "property_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property added to comparison list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compare"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/compare/{compare}": {
            "delete": {
                "tags": [
                    "Compare"
                ],
                "summary": "Remove property from comparison list",
                "operationId": "c4391a691d7857e62d807da786b82869",
                "parameters": [
                    {
                        "name": "compare",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Property removed from comparison list"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get list of contact messages",
                "operationId": "bc39494d59500e2d75e6f6648b43c8de",
                "responses": {
                    "200": {
                        "description": "List of contact messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Contact"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Create a new contact message",
                "operationId": "779a1f2268bae1138e7ea7843dd88d90",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "message"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact message created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Failed to process email"
                    }
                }
            }
        },
        "/api/contacts/{contact}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get contact message details",
                "operationId": "3aa8d034cf6337a272c58197d59546d2",
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact message details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action"
                    },
                    "404": {
                        "description": "Contact message not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete a contact message",
                "operationId": "b31adf98e378f11142d170a575b52377",
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contact message deleted successfully"
                    },
                    "403": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts/{contact}/status": {
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update contact message status",
                "operationId": "f6126a0c545593a9f587e4566262fe16",
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "new",
                                            "read",
                                            "replied"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact message status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/countries": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get list of countries",
                "operationId": "bbb90b9e86a9cab92aaa448fe98954c9",
                "responses": {
                    "200": {
                        "description": "List of countries with state count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Country"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Countries"
                ],
                "summary": "Create a new country",
                "operationId": "575eed1b82f384d950b5b4541e3f2c50",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "code": {
                                        "description": "2-letter country code",
                                        "type": "string",
                                        "maxLength": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Country created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/countries/{country}": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get country details",
                "operationId": "a40dd04920509a61f2c675feb276fb8b",
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country details with states",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Countries"
                ],
                "summary": "Update country details",
                "operationId": "8041d8982d9cef5d5e86ee430feac311",
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "code": {
                                        "description": "2-letter country code",
                                        "type": "string",
                                        "maxLength": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Country updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Countries"
                ],
                "summary": "Delete a country",
                "operationId": "5e731240675aa2c7fbea7d5f8a4c18e5",
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Country deleted successfully"
                    },
                    "422": {
                        "description": "Cannot delete country with associated states"
                    }
                }
            }
        },
        "/api/features": {
            "get": {
                "tags": [
                    "Features"
                ],
                "summary": "Get list of features",
                "operationId": "4b85d91dc5a17243a0ad82b37e04ce02",
                "responses": {
                    "200": {
                        "description": "List of features",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Feature"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Features"
                ],
                "summary": "Create a new feature",
                "operationId": "4e54f691bfe5877221a445df74b88aa7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feature created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feature"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Feature already exists"
                    }
                }
            }
        },
        "/api/features/{feature}": {
            "get": {
                "tags": [
                    "Features"
                ],
                "summary": "Get feature details",
                "operationId": "5f5e1f93737f840df10b8a43f13eba1c",
                "parameters": [
                    {
                        "name": "feature",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feature"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Feature not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Features"
                ],
                "summary": "Update feature details",
                "operationId": "84ff9760bbf199547945d570c7ab9ba7",
                "parameters": [
                    {
                        "name": "feature",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feature updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feature"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Feature with this name already exists"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Features"
                ],
                "summary": "Delete a feature",
                "operationId": "36b9bdb0af6b3eac33bd13ffe8ea0e91",
                "parameters": [
                    {
                        "name": "feature",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Feature deleted successfully"
                    }
                }
            }
        },
        "/api/v1/properties": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get list of properties",
                "operationId": "6b260bd627ea9529982b5e2d22043f25",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by property type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "property_type_id",
                        "in": "query",
                        "description": "Filter by property type ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "city_id",
                        "in": "query",
                        "description": "Filter by city ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Property"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Create a new property",
                "operationId": "2db054c9d418912f0bbaa07588d4364c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "property_type_id",
                                    "property_status_id",
                                    "price",
                                    "area",
                                    "address",
                                    "published_status",
                                    "city_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "property_type_id": {
                                        "type": "integer"
                                    },
                                    "property_status_id": {
                                        "type": "integer"
                                    },
                                    "price": {
                                        "type": "number"
                                    },
                                    "area": {
                                        "type": "number"
                                    },
                                    "bedrooms": {
                                        "type": "integer"
                                    },
                                    "bathrooms": {
                                        "type": "integer"
                                    },
                                    "garages": {
                                        "type": "integer"
                                    },
                                    "year_built": {
                                        "type": "integer"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "type": "number"
                                    },
                                    "published_status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published"
                                        ]
                                    },
                                    "city_id": {
                                        "type": "integer"
                                    },
                                    "amenities": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Property created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Property"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/properties/{property}": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get property details",
                "operationId": "31984b39b2b0ccdf903cfb00399c55c8",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Property"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Properties"
                ],
                "summary": "Update property details",
                "operationId": "e2af35641a64431b7ae3d0b9589273d4",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Property"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Property"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action"
                    },
                    "404": {
                        "description": "Property not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Properties"
                ],
                "summary": "Delete a property",
                "operationId": "38549f6483c41751d9030d8ee6950b3b",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Property deleted successfully"
                    },
                    "403": {
                        "description": "Unauthorized action"
                    },
                    "404": {
                        "description": "Property not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/properties/{property}/favorite": {
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Toggle property favorite status",
                "operationId": "952e29ebdac26914a84a2cb32ecb572a",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorite status toggled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_favorited": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/properties/{property}/compare": {
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Toggle property compare status",
                "operationId": "c6cc9f3d334fcad395f7dadb89d48485",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compare status toggled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_compared": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}/floor-plans": {
            "get": {
                "tags": [
                    "Property Floor Plans"
                ],
                "summary": "Get list of property floor plans",
                "operationId": "ca02133a13ff4d08da6434dd20c7d274",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of property floor plans",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyFloorPlan"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/properties/{property}/inquiries": {
            "get": {
                "tags": [
                    "Property Inquiries"
                ],
                "summary": "Get list of property inquiries",
                "operationId": "2754dbdda6b539d3217e45f80ad01018",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of property inquiries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PropertyInquiry"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Property Inquiries"
                ],
                "summary": "Create a new property inquiry",
                "operationId": "b4a3ec7268dc879112320a49eda2cdfa",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "minLength": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Inquiry created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyInquiry"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}/inquiries/{inquiry}": {
            "get": {
                "tags": [
                    "Property Inquiries"
                ],
                "summary": "Get property inquiry details",
                "operationId": "50301bd28af70a2e83331195e20e034d",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "inquiry",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property inquiry details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyInquiry"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Inquiry not found for this property"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Property Inquiries"
                ],
                "summary": "Delete a property inquiry",
                "operationId": "4b9b4746a8f13af0177ed5057a80a4e1",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "inquiry",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Inquiry deleted successfully"
                    },
                    "404": {
                        "description": "Inquiry not found for this property"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}/inquiries/{inquiry}/status": {
            "put": {
                "tags": [
                    "Property Inquiries"
                ],
                "summary": "Update property inquiry status",
                "operationId": "7722b0f8a8cd567df5f2aa4e96667f2b",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "inquiry",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "new",
                                            "read",
                                            "replied"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inquiry status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyInquiry"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Inquiry not found for this property"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}/media": {
            "get": {
                "tags": [
                    "Property Media"
                ],
                "summary": "Get list of property media",
                "operationId": "67df6bde1fca88b58cd73cb066cea97b",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of property media files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyMedia"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Property Media"
                ],
                "summary": "Upload property media files",
                "operationId": "2971eb2c24c8c843fd0f612178be1dbd",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "images"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "image",
                                            "video",
                                            "virtual_tour"
                                        ]
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Media files uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyMedia"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/properties/{property}/media/{media}": {
            "put": {
                "tags": [
                    "Property Media"
                ],
                "summary": "Update property media details",
                "operationId": "ff76da8051c3604f7b205c891d33c2cf",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "media",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "is_featured": {
                                        "type": "boolean"
                                    },
                                    "sort_order": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Media details updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyMedia"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Property Media"
                ],
                "summary": "Delete property media",
                "operationId": "44cf206e89dd7a58d07c76190f8660d6",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "media",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Media deleted successfully"
                    }
                }
            }
        },
        "/api/properties/{property}/media/reorder": {
            "put": {
                "tags": [
                    "Property Media"
                ],
                "summary": "Reorder property media files",
                "operationId": "99958b34f7d3ced24afdc22b24c5f495",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "media"
                                ],
                                "properties": {
                                    "media": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "sort_order"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "sort_order": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Media files reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyMedia"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/property-statuses": {
            "get": {
                "tags": [
                    "Property Statuses"
                ],
                "summary": "Get list of property statuses",
                "operationId": "b43ac13243ba0e3aaf0c9a3f42c83189",
                "responses": {
                    "200": {
                        "description": "List of property statuses with property count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyStatus"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Property Statuses"
                ],
                "summary": "Create a new property status",
                "operationId": "2dc7575f28626e0feb99e9416b895ce0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Property status created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyStatus"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/property-statuses/{propertyStatus}": {
            "get": {
                "tags": [
                    "Property Statuses"
                ],
                "summary": "Get property status details",
                "operationId": "25aa652b2ec4518114521c45dbc39639",
                "parameters": [
                    {
                        "name": "propertyStatus",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property status details with related properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyStatus"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property status not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Property Statuses"
                ],
                "summary": "Update property status details",
                "operationId": "96f6a1dad9f636525f40ec574aa8ab2b",
                "parameters": [
                    {
                        "name": "propertyStatus",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyStatus"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Property Statuses"
                ],
                "summary": "Delete a property status",
                "operationId": "1ab173a534ece43c271f9daba1f20bdc",
                "parameters": [
                    {
                        "name": "propertyStatus",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Property status deleted successfully"
                    },
                    "422": {
                        "description": "Cannot delete property status with associated properties"
                    }
                }
            }
        },
        "/api/property-types": {
            "get": {
                "tags": [
                    "Property Types"
                ],
                "summary": "Get list of property types",
                "operationId": "71b022e0a71e3ff64ccc80975caec9b7",
                "responses": {
                    "200": {
                        "description": "List of property types with property count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyType"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Property Types"
                ],
                "summary": "Create a new property type",
                "operationId": "3c2c9c7f40e986f3aea83da953df1df7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "slug": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Property type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyType"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/property-types/{propertyType}": {
            "get": {
                "tags": [
                    "Property Types"
                ],
                "summary": "Get property type details",
                "operationId": "1a1dd5aca8611d0f0682de6514aadecc",
                "parameters": [
                    {
                        "name": "propertyType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property type details with related properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property type not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Property Types"
                ],
                "summary": "Update property type details",
                "operationId": "84c9ffe24b6248fdca886807e712fde7",
                "parameters": [
                    {
                        "name": "propertyType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "slug": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyType"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Property Types"
                ],
                "summary": "Delete a property type",
                "operationId": "f4be84c635d2593b74c1b7ec11093bad",
                "parameters": [
                    {
                        "name": "propertyType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Property type deleted successfully"
                    },
                    "422": {
                        "description": "Cannot delete property type with associated properties"
                    }
                }
            }
        },
        "/api/properties/{property}/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get list of property reviews",
                "operationId": "2a63d9161242bd1d6f1f0009f6baf293",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of property reviews",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new property review",
                "operationId": "3e89842e1aa04e256f382f9e72631883",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "comment"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    },
                                    "comment": {
                                        "type": "string",
                                        "minLength": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}/reviews/{review}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get property review details",
                "operationId": "70409d8975b0fbb86bedc8f47d737ce7",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property review details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update property review",
                "operationId": "fc84a3815b21d6f7c2011b1700c5f76b",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "comment"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    },
                                    "comment": {
                                        "type": "string",
                                        "minLength": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to update this review"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a property review",
                "operationId": "b53720747c172157551bd7b9351b1ab9",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Review deleted successfully"
                    },
                    "403": {
                        "description": "Unauthorized to delete this review"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}/schedules": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Get list of property viewing schedules",
                "operationId": "515bb12ffc45137bdf6fb1ab74176632",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of property schedules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Schedule"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Create a new viewing schedule",
                "operationId": "37b4e8c32f09dea877783b26b7be1e2b",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "date",
                                    "time",
                                    "message"
                                ],
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Schedule created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schedule"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}/schedules/{schedule}": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Get viewing schedule details",
                "operationId": "6f4597100f733e92f4db675b9233956a",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "schedule",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schedule"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Delete a viewing schedule",
                "operationId": "4764447505e1de3d1eec034d85ba9229",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "schedule",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Schedule deleted successfully"
                    },
                    "403": {
                        "description": "Unauthorized to delete this schedule"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{property}/schedules/{schedule}/status": {
            "put": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Update viewing schedule status",
                "operationId": "cf2b0e0682e06244ba82df2a2238c3d5",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "schedule",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "approved",
                                            "rejected",
                                            "completed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schedule"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to update this schedule"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states": {
            "get": {
                "tags": [
                    "States"
                ],
                "summary": "Get list of states",
                "operationId": "17bd4db48fba840a5f9f9ecf1543d4c5",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Filter states by country ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of states",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "States"
                ],
                "summary": "Create a new state",
                "operationId": "75eb161b2b554948cd6b6be777929de1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "State created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states/{state}": {
            "get": {
                "tags": [
                    "States"
                ],
                "summary": "Get state details",
                "operationId": "79106bd60d63b9d5b7e93bfeeb41cc38",
                "parameters": [
                    {
                        "name": "state",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "State details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "States"
                ],
                "summary": "Update state details",
                "operationId": "c8ad95c5c7f58a4c807cc1ed1f9283d2",
                "parameters": [
                    {
                        "name": "state",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "State updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "States"
                ],
                "summary": "Delete a state",
                "operationId": "40e196b8e02e091916662e90706dc86b",
                "parameters": [
                    {
                        "name": "state",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "State deleted successfully"
                    },
                    "422": {
                        "description": "Cannot delete state with associated cities"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get list of user subscriptions",
                "operationId": "351423904a0a5ffde2680533b3076476",
                "responses": {
                    "200": {
                        "description": "List of user subscriptions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subscription"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create a new subscription",
                "operationId": "e95a22144803689290e2415240feac54",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "plan_id",
                                    "payment_method"
                                ],
                                "properties": {
                                    "plan_id": {
                                        "type": "integer"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "enum": [
                                            "stripe",
                                            "paypal"
                                        ]
                                    },
                                    "payment_token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get subscription details",
                "operationId": "d4665fc94be62e2afd523bf98688911c",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}/cancel": {
            "put": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Cancel a subscription",
                "operationId": "3ac0a46c74c9e54917964ac58f9e97d2",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to cancel this subscription"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}/resume": {
            "put": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Resume a cancelled subscription",
                "operationId": "bfc2b9b1690775a17d7fa17ca305216a",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription resumed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to resume this subscription"
                    },
                    "422": {
                        "description": "Cannot resume this subscription"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscription-plans": {
            "get": {
                "tags": [
                    "Subscription Plans"
                ],
                "summary": "Get list of subscription plans",
                "operationId": "93e49ee223a5ac6a91fe2a4194d96301",
                "responses": {
                    "200": {
                        "description": "List of subscription plans",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriptionPlan"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscription Plans"
                ],
                "summary": "Create a new subscription plan",
                "operationId": "b6e6a5f169ce13bc5d5a60ea676d4a3f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "duration",
                                    "features"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "duration": {
                                        "description": "Duration in days",
                                        "type": "integer"
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subscription plan created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionPlan"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscription-plans/{plan}": {
            "get": {
                "tags": [
                    "Subscription Plans"
                ],
                "summary": "Get subscription plan details",
                "operationId": "6304fcb42f8b32ff171cac9a7438f876",
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription plan details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionPlan"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription plan not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Subscription Plans"
                ],
                "summary": "Update subscription plan details",
                "operationId": "233009cfe4d9aca23687b5b490f5596f",
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "duration",
                                    "features"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "duration": {
                                        "description": "Duration in days",
                                        "type": "integer"
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription plan updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionPlan"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subscription Plans"
                ],
                "summary": "Delete a subscription plan",
                "operationId": "7f6e8351420488f34fa0fd3b6cc1ca1c",
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Subscription plan deleted successfully"
                    },
                    "422": {
                        "description": "Cannot delete plan with active subscriptions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "operationId": "566aed8efb436ca506e0ef51a032ecd9",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter users by role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "agent",
                                "agency",
                                "admin"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "be551c1d694a01c164966f58bfa77013",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "agent",
                                            "agency",
                                            "admin"
                                        ]
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user details",
                "operationId": "f310aa35b9243239c65dbc8b8f4b135e",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user details",
                "operationId": "f1f65c5e73cb0b10fdd850447b672c28",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "agent",
                                            "agency",
                                            "admin"
                                        ]
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "cf641f0b739211ff3a1c21b1ef310591",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "403": {
                        "description": "Unauthorized to delete this user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all website settings",
                "description": "Returns all website settings including site information, contact details, and configurations",
                "operationId": "f8ef447d9ee38c150eb07e17e6c330a0",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Settings retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Setting"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/settings/{setting}": {
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update website settings",
                "description": "Update website settings including site information, contact details, and configurations",
                "operationId": "3f2476d7dc2b9323b8e7987cfc8bc9c8",
                "parameters": [
                    {
                        "name": "setting",
                        "in": "path",
                        "description": "Setting ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Setting"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Settings updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Setting"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Agency": {
                "required": [
                    "name",
                    "address",
                    "phone",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "logo": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "address": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "website": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "social_media_links": {
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Amenity": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "example": "Swimming Pool"
                    },
                    "icon": {
                        "type": "string",
                        "example": "pool-icon",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "Area": {
                "required": [
                    "city_id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "city_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Property"
                        }
                    }
                },
                "type": "object"
            },
            "Category": {
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Property"
                        }
                    }
                },
                "type": "object"
            },
            "City": {
                "required": [
                    "state_id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    },
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Area"
                        }
                    }
                },
                "type": "object"
            },
            "Compare": {
                "required": [
                    "user_id",
                    "property_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "property_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "property": {
                        "$ref": "#/components/schemas/Property"
                    }
                },
                "type": "object"
            },
            "Contact": {
                "required": [
                    "name",
                    "email",
                    "subject",
                    "message"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "pending",
                            "read",
                            "replied"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Country": {
                "required": [
                    "name",
                    "code"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Favorite": {
                "required": [
                    "user_id",
                    "property_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "property_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "property": {
                        "$ref": "#/components/schemas/Property"
                    }
                },
                "type": "object"
            },
            "Feature": {
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Property"
                        }
                    }
                },
                "type": "object"
            },
            "Property": {
                "required": [
                    "title",
                    "description",
                    "price",
                    "area",
                    "address",
                    "city_id",
                    "property_type_id",
                    "property_status_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "property_type_id": {
                        "type": "integer"
                    },
                    "property_status_id": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "area": {
                        "type": "number",
                        "format": "float"
                    },
                    "bedrooms": {
                        "type": "integer",
                        "nullable": true
                    },
                    "bathrooms": {
                        "type": "integer",
                        "nullable": true
                    },
                    "garages": {
                        "type": "integer",
                        "nullable": true
                    },
                    "year_built": {
                        "type": "integer",
                        "nullable": true
                    },
                    "address": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "published_status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "published"
                        ]
                    },
                    "city_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "featured_image": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "amenities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Amenity"
                        }
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Feature"
                        }
                    },
                    "property_type": {
                        "$ref": "#/components/schemas/PropertyType"
                    },
                    "property_status": {
                        "$ref": "#/components/schemas/PropertyStatus"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PropertyMedia"
                        }
                    },
                    "floor_plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PropertyFloorPlan"
                        }
                    }
                },
                "type": "object"
            },
            "PropertyFloorPlan": {
                "required": [
                    "property_id",
                    "title",
                    "image"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "property_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "image": {
                        "type": "string",
                        "format": "url"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "size": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "bathrooms": {
                        "type": "integer",
                        "nullable": true
                    },
                    "bedrooms": {
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PropertyInquiry": {
                "required": [
                    "property_id",
                    "user_id",
                    "message"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "property_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "responded",
                            "closed"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "property": {
                        "$ref": "#/components/schemas/Property"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "PropertyMedia": {
                "required": [
                    "property_id",
                    "type",
                    "url"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "property_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "image",
                            "video",
                            "virtual-tour"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "format": "url"
                    },
                    "sort_order": {
                        "type": "integer",
                        "nullable": true
                    },
                    "is_featured": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PropertyStatus": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Property"
                        }
                    }
                },
                "type": "object"
            },
            "PropertyType": {
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Property"
                        }
                    }
                },
                "type": "object"
            },
            "Review": {
                "required": [
                    "property_id",
                    "user_id",
                    "rating",
                    "comment"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "property_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float",
                        "maximum": 5,
                        "minimum": 0
                    },
                    "comment": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Schedule": {
                "required": [
                    "property_id",
                    "user_id",
                    "date",
                    "time"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "property_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "property": {
                        "$ref": "#/components/schemas/Property"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Setting": {
                "required": [
                    "site_name",
                    "site_title",
                    "company_name",
                    "contact_email",
                    "contact_phone",
                    "office_address"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "site_name": {
                        "type": "string",
                        "example": "Houzez Real Estate"
                    },
                    "site_title": {
                        "type": "string",
                        "example": "Houzez - Real Estate Platform"
                    },
                    "site_description": {
                        "type": "string",
                        "nullable": true
                    },
                    "site_logo": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "site_favicon": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string",
                        "format": "email"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "office_address": {
                        "type": "string"
                    },
                    "facebook_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "twitter_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "instagram_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "linkedin_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "currency_symbol": {
                        "type": "string",
                        "example": "$"
                    },
                    "measurement_unit": {
                        "type": "string",
                        "example": "sq ft"
                    },
                    "properties_per_page": {
                        "type": "integer",
                        "example": 12
                    },
                    "show_featured_properties": {
                        "type": "boolean"
                    },
                    "enable_map": {
                        "type": "boolean"
                    },
                    "default_latitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "default_longitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "google_analytics_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "meta_keywords": {
                        "type": "string",
                        "nullable": true
                    },
                    "meta_description": {
                        "type": "string",
                        "nullable": true
                    },
                    "smtp_host": {
                        "type": "string",
                        "nullable": true
                    },
                    "smtp_port": {
                        "type": "string",
                        "nullable": true
                    },
                    "smtp_username": {
                        "type": "string",
                        "nullable": true
                    },
                    "mail_encryption": {
                        "type": "string",
                        "nullable": true
                    },
                    "mail_from_address": {
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "mail_from_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "State": {
                "required": [
                    "country_id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    }
                },
                "type": "object"
            },
            "Subscription": {
                "required": [
                    "user_id",
                    "subscription_plan_id",
                    "starts_at",
                    "status",
                    "payment_status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "subscription_plan_id": {
                        "type": "integer"
                    },
                    "starts_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ends_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "expired",
                            "cancelled"
                        ]
                    },
                    "payment_status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed"
                        ]
                    },
                    "payment_method": {
                        "type": "string",
                        "nullable": true
                    },
                    "transaction_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SubscriptionPlan": {
                "required": [
                    "name",
                    "slug",
                    "price",
                    "duration_in_days",
                    "property_limit"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "duration_in_days": {
                        "type": "integer"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "property_limit": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "agent",
                            "admin"
                        ]
                    },
                    "profile_image": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string",
                        "nullable": true
                    },
                    "social_media_links": {
                        "type": "object",
                        "nullable": true
                    },
                    "agency_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "license_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "experience_years": {
                        "type": "integer",
                        "nullable": true
                    },
                    "specialties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Agencies",
            "description": "API Endpoints for real estate agencies"
        },
        {
            "name": "Amenities",
            "description": "API Endpoints for property amenities"
        },
        {
            "name": "Areas",
            "description": "API Endpoints for managing city areas"
        },
        {
            "name": "Categories",
            "description": "API Endpoints for property categories"
        },
        {
            "name": "Compare",
            "description": "API Endpoints for property comparison functionality"
        },
        {
            "name": "Contacts",
            "description": "API Endpoints for managing contact messages"
        },
        {
            "name": "Countries",
            "description": "API Endpoints for managing countries"
        },
        {
            "name": "Features",
            "description": "API Endpoints for property features"
        },
        {
            "name": "Properties",
            "description": "API Endpoints for property management"
        },
        {
            "name": "Property Floor Plans",
            "description": "API Endpoints for managing property floor plans"
        },
        {
            "name": "Property Inquiries",
            "description": "API Endpoints for managing property inquiries"
        },
        {
            "name": "Property Media",
            "description": "API Endpoints for managing property media files"
        },
        {
            "name": "Property Statuses",
            "description": "API Endpoints for managing property statuses"
        },
        {
            "name": "Property Types",
            "description": "API Endpoints for managing property types"
        },
        {
            "name": "Reviews",
            "description": "API Endpoints for managing property reviews"
        },
        {
            "name": "Schedules",
            "description": "API Endpoints for managing property viewing schedules"
        },
        {
            "name": "States",
            "description": "API Endpoints for managing states/provinces"
        },
        {
            "name": "Subscriptions",
            "description": "API Endpoints for managing user subscriptions"
        },
        {
            "name": "Subscription Plans",
            "description": "API Endpoints for managing subscription plans"
        },
        {
            "name": "Users",
            "description": "API Endpoints for managing users"
        },
        {
            "name": "Settings",
            "description": "API Endpoints for managing website settings"
        }
    ]
}